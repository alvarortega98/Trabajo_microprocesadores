
Prueba_arduino_pulsacion-larga_corta.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000060e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000059a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000021  00800100  00800100  0000060e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000060e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000640  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000680  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a09  00000000  00000000  00000708  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000783  00000000  00000000  00001111  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004e3  00000000  00000000  00001894  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000164  00000000  00000000  00001d78  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004a3  00000000  00000000  00001edc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001ab  00000000  00000000  0000237f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  0000252a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4c 00 	jmp	0x98	; 0x98 <__ctors_end>
   4:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
   8:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
   c:	0c 94 80 01 	jmp	0x300	; 0x300 <__vector_3>
  10:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  14:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  18:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  1c:	0c 94 4f 02 	jmp	0x49e	; 0x49e <__vector_7>
  20:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  24:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  28:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  2c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  30:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  34:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  38:	0c 94 38 02 	jmp	0x470	; 0x470 <__vector_14>
  3c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  40:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  44:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  48:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  4c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  50:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  54:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  58:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  5c:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  60:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  64:	0c 94 5e 00 	jmp	0xbc	; 0xbc <__bad_interrupt>
  68:	89 00       	.word	0x0089	; ????
  6a:	90 00       	.word	0x0090	; ????
  6c:	97 00       	.word	0x0097	; ????
  6e:	9e 00       	.word	0x009e	; ????
  70:	a5 00       	.word	0x00a5	; ????
  72:	ac 00       	.word	0x00ac	; ????
  74:	b3 00       	.word	0x00b3	; ????
  76:	ba 00       	.word	0x00ba	; ????
  78:	c1 00       	.word	0x00c1	; ????
  7a:	c8 00       	.word	0x00c8	; ????
  7c:	cf 00       	.word	0x00cf	; ????
  7e:	d4 00       	.word	0x00d4	; ????
  80:	e6 00       	.word	0x00e6	; ????
  82:	ed 00       	.word	0x00ed	; ????
  84:	f4 00       	.word	0x00f4	; ????
  86:	fb 00       	.word	0x00fb	; ????
  88:	02 01       	movw	r0, r4
  8a:	09 01       	movw	r0, r18
  8c:	10 01       	movw	r2, r0
  8e:	17 01       	movw	r2, r14
  90:	1e 01       	movw	r2, r28
  92:	25 01       	movw	r4, r10
  94:	2c 01       	movw	r4, r24
  96:	31 01       	movw	r6, r2

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d8 e0       	ldi	r29, 0x08	; 8
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_clear_bss>:
  a4:	21 e0       	ldi	r18, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	01 c0       	rjmp	.+2      	; 0xae <.do_clear_bss_start>

000000ac <.do_clear_bss_loop>:
  ac:	1d 92       	st	X+, r1

000000ae <.do_clear_bss_start>:
  ae:	a1 32       	cpi	r26, 0x21	; 33
  b0:	b2 07       	cpc	r27, r18
  b2:	e1 f7       	brne	.-8      	; 0xac <.do_clear_bss_loop>
  b4:	0e 94 79 01 	call	0x2f2	; 0x2f2 <main>
  b8:	0c 94 cb 02 	jmp	0x596	; 0x596 <_exit>

000000bc <__bad_interrupt>:
  bc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c0 <actualiza_contador>:
volatile uint16_t bandera_antirrebotes = 0;	//Esto puede estar mal (ver debug)
volatile int T = 0;


void actualiza_contador() {
	if (contador < 9) {
  c0:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <contador>
  c4:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <contador+0x1>
  c8:	09 97       	sbiw	r24, 0x09	; 9
  ca:	50 f4       	brcc	.+20     	; 0xe0 <actualiza_contador+0x20>
		contador++;
  cc:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <contador>
  d0:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <contador+0x1>
  d4:	01 96       	adiw	r24, 0x01	; 1
  d6:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <contador+0x1>
  da:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <contador>
  de:	04 c0       	rjmp	.+8      	; 0xe8 <actualiza_contador+0x28>
	} else {
		contador = 0;
  e0:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <contador+0x1>
  e4:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <contador>
	}
	display_0 = contador;
  e8:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <contador>
  ec:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <contador+0x1>
  f0:	90 93 18 01 	sts	0x0118, r25	; 0x800118 <display_0+0x1>
  f4:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <display_0>
  f8:	08 95       	ret

000000fa <actualiza_display>:
}
	
void actualiza_display() {
	switch (display_1) {
  fa:	e0 91 19 01 	lds	r30, 0x0119	; 0x800119 <display_1>
  fe:	f0 91 1a 01 	lds	r31, 0x011A	; 0x80011a <display_1+0x1>
 102:	ec 30       	cpi	r30, 0x0C	; 12
 104:	f1 05       	cpc	r31, r1
 106:	08 f0       	brcs	.+2      	; 0x10a <actualiza_display+0x10>
 108:	55 c0       	rjmp	.+170    	; 0x1b4 <actualiza_display+0xba>
 10a:	ec 5c       	subi	r30, 0xCC	; 204
 10c:	ff 4f       	sbci	r31, 0xFF	; 255
 10e:	0c 94 bc 02 	jmp	0x578	; 0x578 <__tablejump2__>
		case 0: display_1_7seg = 0b00111111; break; //Número 0;
 112:	8f e3       	ldi	r24, 0x3F	; 63
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <display_1_7seg+0x1>
 11a:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <display_1_7seg>
 11e:	4a c0       	rjmp	.+148    	; 0x1b4 <actualiza_display+0xba>
		case 1: display_1_7seg = 0b00000110; break; //Número 1;
 120:	86 e0       	ldi	r24, 0x06	; 6
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <display_1_7seg+0x1>
 128:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <display_1_7seg>
 12c:	43 c0       	rjmp	.+134    	; 0x1b4 <actualiza_display+0xba>
		case 2: display_1_7seg = 0b01011011; break; //Número 2;
 12e:	8b e5       	ldi	r24, 0x5B	; 91
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <display_1_7seg+0x1>
 136:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <display_1_7seg>
 13a:	3c c0       	rjmp	.+120    	; 0x1b4 <actualiza_display+0xba>
		case 3: display_1_7seg = 0b01001111; break; //Número 3;
 13c:	8f e4       	ldi	r24, 0x4F	; 79
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <display_1_7seg+0x1>
 144:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <display_1_7seg>
 148:	35 c0       	rjmp	.+106    	; 0x1b4 <actualiza_display+0xba>
		case 4: display_1_7seg = 0b01100110; break; //Número 4;
 14a:	86 e6       	ldi	r24, 0x66	; 102
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <display_1_7seg+0x1>
 152:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <display_1_7seg>
 156:	2e c0       	rjmp	.+92     	; 0x1b4 <actualiza_display+0xba>
		case 5: display_1_7seg = 0b01101101; break; //Número 5;
 158:	8d e6       	ldi	r24, 0x6D	; 109
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <display_1_7seg+0x1>
 160:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <display_1_7seg>
 164:	27 c0       	rjmp	.+78     	; 0x1b4 <actualiza_display+0xba>
		case 6: display_1_7seg = 0b01111101; break; //Número 6;
 166:	8d e7       	ldi	r24, 0x7D	; 125
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <display_1_7seg+0x1>
 16e:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <display_1_7seg>
 172:	20 c0       	rjmp	.+64     	; 0x1b4 <actualiza_display+0xba>
		case 7: display_1_7seg = 0b00000111; break; //Número 7;
 174:	87 e0       	ldi	r24, 0x07	; 7
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <display_1_7seg+0x1>
 17c:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <display_1_7seg>
 180:	19 c0       	rjmp	.+50     	; 0x1b4 <actualiza_display+0xba>
		case 8: display_1_7seg = 0b01111111; break; //Número 8;
 182:	8f e7       	ldi	r24, 0x7F	; 127
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <display_1_7seg+0x1>
 18a:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <display_1_7seg>
 18e:	12 c0       	rjmp	.+36     	; 0x1b4 <actualiza_display+0xba>
		case 9: display_1_7seg = 0b01101111; break; //Número 9;
 190:	8f e6       	ldi	r24, 0x6F	; 111
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <display_1_7seg+0x1>
 198:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <display_1_7seg>
 19c:	0b c0       	rjmp	.+22     	; 0x1b4 <actualiza_display+0xba>
		case 10: display_1_7seg = 0b00000000; break; //Display apagado;
 19e:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <display_1_7seg+0x1>
 1a2:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <display_1_7seg>
 1a6:	06 c0       	rjmp	.+12     	; 0x1b4 <actualiza_display+0xba>
		case 11: display_1_7seg = 0b01110011; break; //Letra P;
 1a8:	83 e7       	ldi	r24, 0x73	; 115
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <display_1_7seg+0x1>
 1b0:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <display_1_7seg>
	}
	
	switch (display_0) {
 1b4:	e0 91 17 01 	lds	r30, 0x0117	; 0x800117 <display_0>
 1b8:	f0 91 18 01 	lds	r31, 0x0118	; 0x800118 <display_0+0x1>
 1bc:	ec 30       	cpi	r30, 0x0C	; 12
 1be:	f1 05       	cpc	r31, r1
 1c0:	08 f0       	brcs	.+2      	; 0x1c4 <actualiza_display+0xca>
 1c2:	55 c0       	rjmp	.+170    	; 0x26e <actualiza_display+0x174>
 1c4:	e0 5c       	subi	r30, 0xC0	; 192
 1c6:	ff 4f       	sbci	r31, 0xFF	; 255
 1c8:	0c 94 bc 02 	jmp	0x578	; 0x578 <__tablejump2__>
		case 0: display_0_7seg = 0b00111111; break; //Número 0;
 1cc:	8f e3       	ldi	r24, 0x3F	; 63
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <display_0_7seg+0x1>
 1d4:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <display_0_7seg>
 1d8:	08 95       	ret
		case 1: display_0_7seg = 0b00000110; break; //Número 1;
 1da:	86 e0       	ldi	r24, 0x06	; 6
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <display_0_7seg+0x1>
 1e2:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <display_0_7seg>
 1e6:	08 95       	ret
		case 2: display_0_7seg = 0b01011011; break; //Número 2;
 1e8:	8b e5       	ldi	r24, 0x5B	; 91
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <display_0_7seg+0x1>
 1f0:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <display_0_7seg>
 1f4:	08 95       	ret
		case 3: display_0_7seg = 0b01001111; break; //Número 3;
 1f6:	8f e4       	ldi	r24, 0x4F	; 79
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <display_0_7seg+0x1>
 1fe:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <display_0_7seg>
 202:	08 95       	ret
		case 4: display_0_7seg = 0b01100110; break; //Número 4;
 204:	86 e6       	ldi	r24, 0x66	; 102
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <display_0_7seg+0x1>
 20c:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <display_0_7seg>
 210:	08 95       	ret
		case 5: display_0_7seg = 0b01101101; break; //Número 5;
 212:	8d e6       	ldi	r24, 0x6D	; 109
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <display_0_7seg+0x1>
 21a:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <display_0_7seg>
 21e:	08 95       	ret
		case 6: display_0_7seg = 0b01111101; break; //Número 6;
 220:	8d e7       	ldi	r24, 0x7D	; 125
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <display_0_7seg+0x1>
 228:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <display_0_7seg>
 22c:	08 95       	ret
		case 7: display_0_7seg = 0b00000111; break; //Número 7;
 22e:	87 e0       	ldi	r24, 0x07	; 7
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <display_0_7seg+0x1>
 236:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <display_0_7seg>
 23a:	08 95       	ret
		case 8: display_0_7seg = 0b01111111; break; //Número 8;
 23c:	8f e7       	ldi	r24, 0x7F	; 127
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <display_0_7seg+0x1>
 244:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <display_0_7seg>
 248:	08 95       	ret
		case 9: display_0_7seg = 0b01101111; break; //Número 9;
 24a:	8f e6       	ldi	r24, 0x6F	; 111
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <display_0_7seg+0x1>
 252:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <display_0_7seg>
 256:	08 95       	ret
		case 10: display_0_7seg = 0b00000000; break; //Display apagado;
 258:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <display_0_7seg+0x1>
 25c:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <display_0_7seg>
 260:	08 95       	ret
		case 11: display_0_7seg = 0b01110011; break; //Letra P;
 262:	83 e7       	ldi	r24, 0x73	; 115
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <display_0_7seg+0x1>
 26a:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <display_0_7seg>
 26e:	08 95       	ret

00000270 <inicializa_display>:
	}
}

void inicializa_display() {
	display_0 = 0;
 270:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <display_0+0x1>
 274:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <display_0>
	display_1 = 11;
 278:	8b e0       	ldi	r24, 0x0B	; 11
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	90 93 1a 01 	sts	0x011A, r25	; 0x80011a <display_1+0x1>
 280:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <display_1>
	sel = 0;
 284:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <sel+0x1>
 288:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <sel>
 28c:	08 95       	ret

0000028e <setup_inicio>:
}

void setup_inicio() {
	
	estado = 'i';
 28e:	89 e6       	ldi	r24, 0x69	; 105
 290:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <estado>
	
	cli();
 294:	f8 94       	cli
	
	//Las siguientes líneas de código son para habilitar las interrupciones de los botones SS y UP.
	PCICR = 1<<PCIE0;
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7f8068>
	PCMSK0 |= 1<<PCINT0; // boton UP (PB2)
 29c:	eb e6       	ldi	r30, 0x6B	; 107
 29e:	f0 e0       	ldi	r31, 0x00	; 0
 2a0:	80 81       	ld	r24, Z
 2a2:	81 60       	ori	r24, 0x01	; 1
 2a4:	80 83       	st	Z, r24
	
	//Habilitamos el timer de refresco del display (modo CTC, preescalado 8)
	TCCR2A = 1<<WGM21;
 2a6:	82 e0       	ldi	r24, 0x02	; 2
 2a8:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
	TCCR2B = 1<<CS21;
 2ac:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
	TIMSK2 = 1<<OCIE2A;
 2b0:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f8070>
	OCR2A = 250;
 2b4:	9a ef       	ldi	r25, 0xFA	; 250
 2b6:	90 93 b3 00 	sts	0x00B3, r25	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f80b3>
	
	//Se utiliza el timer 0 en modo ctc, con preescalado de 64 y con OCR1A = 125 (1ms)
	TCCR0A |= 1<<WGM01;
 2ba:	94 b5       	in	r25, 0x24	; 36
 2bc:	92 60       	ori	r25, 0x02	; 2
 2be:	94 bd       	out	0x24, r25	; 36
	TCCR0B |= 1<<CS00;
 2c0:	95 b5       	in	r25, 0x25	; 37
 2c2:	91 60       	ori	r25, 0x01	; 1
 2c4:	95 bd       	out	0x25, r25	; 37
	TCCR0B |= 1<<CS01;
 2c6:	95 b5       	in	r25, 0x25	; 37
 2c8:	92 60       	ori	r25, 0x02	; 2
 2ca:	95 bd       	out	0x25, r25	; 37
	TIMSK0 |= 1<<OCIE1A;
 2cc:	ee e6       	ldi	r30, 0x6E	; 110
 2ce:	f0 e0       	ldi	r31, 0x00	; 0
 2d0:	90 81       	ld	r25, Z
 2d2:	92 60       	ori	r25, 0x02	; 2
 2d4:	90 83       	st	Z, r25
	OCR0A = 125;  // 0.001s / (1s / 8*10^6 ciclos)*64 = 125 ciclos
 2d6:	9d e7       	ldi	r25, 0x7D	; 125
 2d8:	97 bd       	out	0x27, r25	; 39
	
	//Seteamos entradas y salidas
	DDRD = 0xFF;		//Display
 2da:	9f ef       	ldi	r25, 0xFF	; 255
 2dc:	9a b9       	out	0x0a, r25	; 10
	DDRB = 1<<1;
 2de:	84 b9       	out	0x04, r24	; 4
	DDRB |= 1<<2;
 2e0:	84 b1       	in	r24, 0x04	; 4
 2e2:	84 60       	ori	r24, 0x04	; 4
 2e4:	84 b9       	out	0x04, r24	; 4
	
	
	inicializa_display();
 2e6:	0e 94 38 01 	call	0x270	; 0x270 <inicializa_display>
	actualiza_display();
 2ea:	0e 94 7d 00 	call	0xfa	; 0xfa <actualiza_display>
	
	sei();
 2ee:	78 94       	sei
 2f0:	08 95       	ret

000002f2 <main>:
}


int main(void) {
    
	setup_inicio();
 2f2:	0e 94 47 01 	call	0x28e	; 0x28e <setup_inicio>
	
	main_principal();
 2f6:	0e 94 93 02 	call	0x526	; 0x526 <main_principal>
	} while (bandera_SS == 0);
	bandera_SS = 0;
	*/	
	
	
}
 2fa:	80 e0       	ldi	r24, 0x00	; 0
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	08 95       	ret

00000300 <__vector_3>:
		}
	}
	
}*/

ISR(PCINT0_vect) {
 300:	1f 92       	push	r1
 302:	0f 92       	push	r0
 304:	0f b6       	in	r0, 0x3f	; 63
 306:	0f 92       	push	r0
 308:	11 24       	eor	r1, r1
 30a:	af 92       	push	r10
 30c:	bf 92       	push	r11
 30e:	cf 92       	push	r12
 310:	df 92       	push	r13
 312:	ef 92       	push	r14
 314:	ff 92       	push	r15
 316:	0f 93       	push	r16
 318:	1f 93       	push	r17
 31a:	2f 93       	push	r18
 31c:	3f 93       	push	r19
 31e:	4f 93       	push	r20
 320:	5f 93       	push	r21
 322:	6f 93       	push	r22
 324:	7f 93       	push	r23
 326:	8f 93       	push	r24
 328:	9f 93       	push	r25
 32a:	ef 93       	push	r30
 32c:	ff 93       	push	r31
	static uint64_t Trise = 0;
	static uint64_t Ton = 0;
	if (bandera_antirrebotes == 1) {
 32e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <bandera_antirrebotes>
 332:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <bandera_antirrebotes+0x1>
 336:	01 97       	sbiw	r24, 0x01	; 1
 338:	81 f4       	brne	.+32     	; 0x35a <__vector_3+0x5a>
		if (millis - T > 50) {
 33a:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <millis>
 33e:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <millis+0x1>
 342:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <T>
 346:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <T+0x1>
 34a:	82 1b       	sub	r24, r18
 34c:	93 0b       	sbc	r25, r19
 34e:	c3 97       	sbiw	r24, 0x33	; 51
 350:	24 f0       	brlt	.+8      	; 0x35a <__vector_3+0x5a>
			bandera_antirrebotes = 0;
 352:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <bandera_antirrebotes+0x1>
 356:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <bandera_antirrebotes>
		}
	}
	if (bandera_antirrebotes == 0) {
 35a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <bandera_antirrebotes>
 35e:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <bandera_antirrebotes+0x1>
 362:	89 2b       	or	r24, r25
 364:	09 f0       	breq	.+2      	; 0x368 <__vector_3+0x68>
 366:	6d c0       	rjmp	.+218    	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
		if (getBit(BOTONES, UP)) {
 368:	18 9b       	sbis	0x03, 0	; 3
 36a:	26 c0       	rjmp	.+76     	; 0x3b8 <__vector_3+0xb8>
			Trise = millis;
 36c:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <millis>
 370:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <millis+0x1>
 374:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 378:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 37c:	89 2f       	mov	r24, r25
 37e:	88 0f       	add	r24, r24
 380:	88 0b       	sbc	r24, r24
 382:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_edata+0x2>
 386:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <_edata+0x3>
 38a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <_edata+0x4>
 38e:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <_edata+0x5>
 392:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_edata+0x6>
 396:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <_edata+0x7>
			T = millis;
 39a:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <millis>
 39e:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <millis+0x1>
 3a2:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <T+0x1>
 3a6:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <T>
			bandera_antirrebotes = 1;			
 3aa:	81 e0       	ldi	r24, 0x01	; 1
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <bandera_antirrebotes+0x1>
 3b2:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <bandera_antirrebotes>
 3b6:	45 c0       	rjmp	.+138    	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
		} else {
			Ton = millis -Trise;
 3b8:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <millis>
 3bc:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <millis+0x1>
 3c0:	95 2f       	mov	r25, r21
 3c2:	99 0f       	add	r25, r25
 3c4:	99 0b       	sbc	r25, r25
 3c6:	24 2f       	mov	r18, r20
 3c8:	35 2f       	mov	r19, r21
 3ca:	49 2f       	mov	r20, r25
 3cc:	59 2f       	mov	r21, r25
 3ce:	69 2f       	mov	r22, r25
 3d0:	79 2f       	mov	r23, r25
 3d2:	89 2f       	mov	r24, r25
 3d4:	a0 90 00 01 	lds	r10, 0x0100	; 0x800100 <_edata>
 3d8:	b0 90 01 01 	lds	r11, 0x0101	; 0x800101 <_edata+0x1>
 3dc:	c0 90 02 01 	lds	r12, 0x0102	; 0x800102 <_edata+0x2>
 3e0:	d0 90 03 01 	lds	r13, 0x0103	; 0x800103 <_edata+0x3>
 3e4:	e0 90 04 01 	lds	r14, 0x0104	; 0x800104 <_edata+0x4>
 3e8:	f0 90 05 01 	lds	r15, 0x0105	; 0x800105 <_edata+0x5>
 3ec:	00 91 06 01 	lds	r16, 0x0106	; 0x800106 <_edata+0x6>
 3f0:	10 91 07 01 	lds	r17, 0x0107	; 0x800107 <_edata+0x7>
 3f4:	0e 94 c2 02 	call	0x584	; 0x584 <__subdi3>
			T = millis;
 3f8:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <millis>
 3fc:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <millis+0x1>
 400:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <T+0x1>
 404:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <T>
			bandera_antirrebotes = 1;
 408:	e1 e0       	ldi	r30, 0x01	; 1
 40a:	f0 e0       	ldi	r31, 0x00	; 0
 40c:	f0 93 0b 01 	sts	0x010B, r31	; 0x80010b <bandera_antirrebotes+0x1>
 410:	e0 93 0a 01 	sts	0x010A, r30	; 0x80010a <bandera_antirrebotes>
			if (Ton < 2000){
 414:	2f 3c       	cpi	r18, 0xCF	; 207
 416:	37 40       	sbci	r19, 0x07	; 7
 418:	41 05       	cpc	r20, r1
 41a:	51 05       	cpc	r21, r1
 41c:	61 05       	cpc	r22, r1
 41e:	71 05       	cpc	r23, r1
 420:	81 05       	cpc	r24, r1
 422:	91 05       	cpc	r25, r1
 424:	09 f0       	breq	.+2      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 426:	38 f4       	brcc	.+14     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
				bandera_UP = 1;
 428:	81 e0       	ldi	r24, 0x01	; 1
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <bandera_UP+0x1>
 430:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <bandera_UP>
 434:	06 c0       	rjmp	.+12     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
			} else {
				bandera_apagar = 1;
 436:	81 e0       	ldi	r24, 0x01	; 1
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <bandera_apagar+0x1>
 43e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <bandera_apagar>
			}
		}
	}
	
}
 442:	ff 91       	pop	r31
 444:	ef 91       	pop	r30
 446:	9f 91       	pop	r25
 448:	8f 91       	pop	r24
 44a:	7f 91       	pop	r23
 44c:	6f 91       	pop	r22
 44e:	5f 91       	pop	r21
 450:	4f 91       	pop	r20
 452:	3f 91       	pop	r19
 454:	2f 91       	pop	r18
 456:	1f 91       	pop	r17
 458:	0f 91       	pop	r16
 45a:	ff 90       	pop	r15
 45c:	ef 90       	pop	r14
 45e:	df 90       	pop	r13
 460:	cf 90       	pop	r12
 462:	bf 90       	pop	r11
 464:	af 90       	pop	r10
 466:	0f 90       	pop	r0
 468:	0f be       	out	0x3f, r0	; 63
 46a:	0f 90       	pop	r0
 46c:	1f 90       	pop	r1
 46e:	18 95       	reti

00000470 <__vector_14>:

ISR(TIMER0_COMPA_vect){
 470:	1f 92       	push	r1
 472:	0f 92       	push	r0
 474:	0f b6       	in	r0, 0x3f	; 63
 476:	0f 92       	push	r0
 478:	11 24       	eor	r1, r1
 47a:	8f 93       	push	r24
 47c:	9f 93       	push	r25
	millis++;
 47e:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <millis>
 482:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <millis+0x1>
 486:	01 96       	adiw	r24, 0x01	; 1
 488:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <millis+0x1>
 48c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <millis>
}
 490:	9f 91       	pop	r25
 492:	8f 91       	pop	r24
 494:	0f 90       	pop	r0
 496:	0f be       	out	0x3f, r0	; 63
 498:	0f 90       	pop	r0
 49a:	1f 90       	pop	r1
 49c:	18 95       	reti

0000049e <__vector_7>:

ISR(TIMER2_COMPA_vect) {
 49e:	1f 92       	push	r1
 4a0:	0f 92       	push	r0
 4a2:	0f b6       	in	r0, 0x3f	; 63
 4a4:	0f 92       	push	r0
 4a6:	11 24       	eor	r1, r1
 4a8:	8f 93       	push	r24
 4aa:	9f 93       	push	r25
	if (sel == 1) {
 4ac:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <sel>
 4b0:	90 91 1c 01 	lds	r25, 0x011C	; 0x80011c <sel+0x1>
 4b4:	01 97       	sbiw	r24, 0x01	; 1
 4b6:	81 f4       	brne	.+32     	; 0x4d8 <__vector_7+0x3a>
		clrBit(PORTB, 2);
 4b8:	85 b1       	in	r24, 0x05	; 5
 4ba:	8b 7f       	andi	r24, 0xFB	; 251
 4bc:	85 b9       	out	0x05, r24	; 5
		setBit(PORTB, 1);
 4be:	85 b1       	in	r24, 0x05	; 5
 4c0:	82 60       	ori	r24, 0x02	; 2
 4c2:	85 b9       	out	0x05, r24	; 5
		SEGMENTOS = display_1_7seg;
 4c4:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <display_1_7seg>
 4c8:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <display_1_7seg+0x1>
 4cc:	8b b9       	out	0x0b, r24	; 11
		sel = 0;
 4ce:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <sel+0x1>
 4d2:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <sel>
 4d6:	11 c0       	rjmp	.+34     	; 0x4fa <__vector_7+0x5c>
	} else {
		clrBit(PORTB, 1);
 4d8:	85 b1       	in	r24, 0x05	; 5
 4da:	8d 7f       	andi	r24, 0xFD	; 253
 4dc:	85 b9       	out	0x05, r24	; 5
		setBit(PORTB, 2);
 4de:	85 b1       	in	r24, 0x05	; 5
 4e0:	84 60       	ori	r24, 0x04	; 4
 4e2:	85 b9       	out	0x05, r24	; 5
		SEGMENTOS = display_0_7seg;
 4e4:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <display_0_7seg>
 4e8:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <display_0_7seg+0x1>
 4ec:	8b b9       	out	0x0b, r24	; 11
		sel = 1;
 4ee:	81 e0       	ldi	r24, 0x01	; 1
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	90 93 1c 01 	sts	0x011C, r25	; 0x80011c <sel+0x1>
 4f6:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <sel>
	}
}
 4fa:	9f 91       	pop	r25
 4fc:	8f 91       	pop	r24
 4fe:	0f 90       	pop	r0
 500:	0f be       	out	0x3f, r0	; 63
 502:	0f 90       	pop	r0
 504:	1f 90       	pop	r1
 506:	18 95       	reti

00000508 <setup_principal>:
volatile extern int bandera_apagar;
volatile extern int display_0;
volatile extern int display_1;

void setup_principal(){
	estado = 'p';
 508:	80 e7       	ldi	r24, 0x70	; 112
 50a:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <estado>
 50e:	08 95       	ret

00000510 <apaga_display>:
}

void apaga_display(){
	display_0 = 10;
 510:	8a e0       	ldi	r24, 0x0A	; 10
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	90 93 18 01 	sts	0x0118, r25	; 0x800118 <display_0+0x1>
 518:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <display_0>
	display_1 = 10;
 51c:	90 93 1a 01 	sts	0x011A, r25	; 0x80011a <display_1+0x1>
 520:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <display_1>
 524:	08 95       	ret

00000526 <main_principal>:
}

void main_principal(){
	setup_principal();
 526:	0e 94 84 02 	call	0x508	; 0x508 <setup_principal>
	do {
		if (bandera_UP == 1) {
 52a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <bandera_UP>
 52e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <bandera_UP+0x1>
 532:	01 97       	sbiw	r24, 0x01	; 1
 534:	41 f4       	brne	.+16     	; 0x546 <main_principal+0x20>
			actualiza_contador();
 536:	0e 94 60 00 	call	0xc0	; 0xc0 <actualiza_contador>
			actualiza_display();
 53a:	0e 94 7d 00 	call	0xfa	; 0xfa <actualiza_display>
			bandera_UP = 0;
 53e:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <bandera_UP+0x1>
 542:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <bandera_UP>
		}
		if (bandera_apagar == 1) {
 546:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <bandera_apagar>
 54a:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <bandera_apagar+0x1>
 54e:	01 97       	sbiw	r24, 0x01	; 1
 550:	41 f4       	brne	.+16     	; 0x562 <main_principal+0x3c>
			apaga_display();
 552:	0e 94 88 02 	call	0x510	; 0x510 <apaga_display>
			actualiza_display();
 556:	0e 94 7d 00 	call	0xfa	; 0xfa <actualiza_display>
			bandera_apagar = 0;
 55a:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <bandera_apagar+0x1>
 55e:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <bandera_apagar>
		}
	} while (bandera_SS == 0);
 562:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <bandera_SS>
 566:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <bandera_SS+0x1>
 56a:	89 2b       	or	r24, r25
 56c:	f1 f2       	breq	.-68     	; 0x52a <main_principal+0x4>
	bandera_SS = 0;
 56e:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <bandera_SS+0x1>
 572:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <bandera_SS>
 576:	08 95       	ret

00000578 <__tablejump2__>:
 578:	ee 0f       	add	r30, r30
 57a:	ff 1f       	adc	r31, r31
 57c:	05 90       	lpm	r0, Z+
 57e:	f4 91       	lpm	r31, Z
 580:	e0 2d       	mov	r30, r0
 582:	09 94       	ijmp

00000584 <__subdi3>:
 584:	2a 19       	sub	r18, r10
 586:	3b 09       	sbc	r19, r11
 588:	4c 09       	sbc	r20, r12
 58a:	5d 09       	sbc	r21, r13
 58c:	6e 09       	sbc	r22, r14
 58e:	7f 09       	sbc	r23, r15
 590:	80 0b       	sbc	r24, r16
 592:	91 0b       	sbc	r25, r17
 594:	08 95       	ret

00000596 <_exit>:
 596:	f8 94       	cli

00000598 <__stop_program>:
 598:	ff cf       	rjmp	.-2      	; 0x598 <__stop_program>
