
Robot_de_cocina_versionBuena.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800200  000009b2  00000a46  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009b2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000039  00800202  00800202  00000a48  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a48  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a78  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010e9  00000000  00000000  00000b7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d61  00000000  00000000  00001c65  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007f6  00000000  00000000  000029c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000344  00000000  00000000  000031bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000723  00000000  00000000  00003500  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005eb  00000000  00000000  00003c23  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  0000420e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 8a 00 	jmp	0x114	; 0x114 <__ctors_end>
   4:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
   8:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
   c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  10:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  14:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  18:	0c 94 85 01 	jmp	0x30a	; 0x30a <__vector_6>
  1c:	0c 94 2f 02 	jmp	0x45e	; 0x45e <__vector_7>
  20:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  24:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  28:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  2c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  30:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  34:	0c 94 d9 02 	jmp	0x5b2	; 0x5b2 <__vector_13>
  38:	0c 94 18 03 	jmp	0x630	; 0x630 <__vector_14>
  3c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  40:	0c 94 23 04 	jmp	0x846	; 0x846 <__vector_16>
  44:	0c 94 be 03 	jmp	0x77c	; 0x77c <__vector_17>
  48:	0c 94 e3 03 	jmp	0x7c6	; 0x7c6 <__vector_18>
  4c:	0c 94 00 04 	jmp	0x800	; 0x800 <__vector_19>
  50:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  54:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  58:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  5c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  60:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  64:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  68:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  6c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  70:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  74:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  78:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  7c:	0c 94 50 04 	jmp	0x8a0	; 0x8a0 <__vector_31>
  80:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  84:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  88:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  8c:	0c 94 99 04 	jmp	0x932	; 0x932 <__vector_35>
  90:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  94:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  98:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  9c:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  a0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  a4:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  a8:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  ac:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  b0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  b4:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  b8:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  bc:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  c0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  c4:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  c8:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  cc:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  d0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  d4:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  d8:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  dc:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  e0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__bad_interrupt>
  e4:	ce 00       	.word	0x00ce	; ????
  e6:	d2 00       	.word	0x00d2	; ????
  e8:	d6 00       	.word	0x00d6	; ????
  ea:	da 00       	.word	0x00da	; ????
  ec:	de 00       	.word	0x00de	; ????
  ee:	e2 00       	.word	0x00e2	; ????
  f0:	e6 00       	.word	0x00e6	; ????
  f2:	ea 00       	.word	0x00ea	; ????
  f4:	ee 00       	.word	0x00ee	; ????
  f6:	f2 00       	.word	0x00f2	; ????
  f8:	f6 00       	.word	0x00f6	; ????
  fa:	f9 00       	.word	0x00f9	; ????
  fc:	07 01       	movw	r0, r14
  fe:	0b 01       	movw	r0, r22
 100:	0f 01       	movw	r0, r30
 102:	13 01       	movw	r2, r6
 104:	17 01       	movw	r2, r14
 106:	1b 01       	movw	r2, r22
 108:	1f 01       	movw	r2, r30
 10a:	23 01       	movw	r4, r6
 10c:	27 01       	movw	r4, r14
 10e:	2b 01       	movw	r4, r22
 110:	2f 01       	movw	r4, r30
 112:	32 01       	movw	r6, r4

00000114 <__ctors_end>:
 114:	11 24       	eor	r1, r1
 116:	1f be       	out	0x3f, r1	; 63
 118:	cf ef       	ldi	r28, 0xFF	; 255
 11a:	d1 e2       	ldi	r29, 0x21	; 33
 11c:	de bf       	out	0x3e, r29	; 62
 11e:	cd bf       	out	0x3d, r28	; 61

00000120 <__do_copy_data>:
 120:	12 e0       	ldi	r17, 0x02	; 2
 122:	a0 e0       	ldi	r26, 0x00	; 0
 124:	b2 e0       	ldi	r27, 0x02	; 2
 126:	e2 eb       	ldi	r30, 0xB2	; 178
 128:	f9 e0       	ldi	r31, 0x09	; 9
 12a:	02 c0       	rjmp	.+4      	; 0x130 <__do_copy_data+0x10>
 12c:	05 90       	lpm	r0, Z+
 12e:	0d 92       	st	X+, r0
 130:	a2 30       	cpi	r26, 0x02	; 2
 132:	b1 07       	cpc	r27, r17
 134:	d9 f7       	brne	.-10     	; 0x12c <__do_copy_data+0xc>

00000136 <__do_clear_bss>:
 136:	22 e0       	ldi	r18, 0x02	; 2
 138:	a2 e0       	ldi	r26, 0x02	; 2
 13a:	b2 e0       	ldi	r27, 0x02	; 2
 13c:	01 c0       	rjmp	.+2      	; 0x140 <.do_clear_bss_start>

0000013e <.do_clear_bss_loop>:
 13e:	1d 92       	st	X+, r1

00000140 <.do_clear_bss_start>:
 140:	ab 33       	cpi	r26, 0x3B	; 59
 142:	b2 07       	cpc	r27, r18
 144:	e1 f7       	brne	.-8      	; 0x13e <.do_clear_bss_loop>
 146:	0e 94 6e 01 	call	0x2dc	; 0x2dc <main>
 14a:	0c 94 d7 04 	jmp	0x9ae	; 0x9ae <_exit>

0000014e <__bad_interrupt>:
 14e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000152 <actualiza_contador>:
	sei();
}

void actualiza_contador() {
	static uint16_t contador = 0;
	if (contador < 9) {
 152:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <contador.1619>
 156:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <contador.1619+0x1>
 15a:	89 30       	cpi	r24, 0x09	; 9
 15c:	91 05       	cpc	r25, r1
 15e:	30 f4       	brcc	.+12     	; 0x16c <actualiza_contador+0x1a>
		contador++;
 160:	01 96       	adiw	r24, 0x01	; 1
 162:	90 93 18 02 	sts	0x0218, r25	; 0x800218 <contador.1619+0x1>
 166:	80 93 17 02 	sts	0x0217, r24	; 0x800217 <contador.1619>
 16a:	04 c0       	rjmp	.+8      	; 0x174 <actualiza_contador+0x22>
		} else {
		contador = 0;
 16c:	10 92 18 02 	sts	0x0218, r1	; 0x800218 <contador.1619+0x1>
 170:	10 92 17 02 	sts	0x0217, r1	; 0x800217 <contador.1619>
	}
	display_0 = contador;
 174:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <contador.1619>
 178:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <contador.1619+0x1>
 17c:	90 93 2c 02 	sts	0x022C, r25	; 0x80022c <display_0+0x1>
 180:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <display_0>
 184:	08 95       	ret

00000186 <actualiza_display>:
	
}

void actualiza_display() {
	switch (display_1) {
 186:	e0 91 2d 02 	lds	r30, 0x022D	; 0x80022d <display_1>
 18a:	f0 91 2e 02 	lds	r31, 0x022E	; 0x80022e <display_1+0x1>
 18e:	ec 30       	cpi	r30, 0x0C	; 12
 190:	f1 05       	cpc	r31, r1
 192:	90 f5       	brcc	.+100    	; 0x1f8 <actualiza_display+0x72>
 194:	ee 58       	subi	r30, 0x8E	; 142
 196:	ff 4f       	sbci	r31, 0xFF	; 255
 198:	0c 94 b0 04 	jmp	0x960	; 0x960 <__tablejump2__>
		case 0: display_1_7seg = 0b00111111; break; //Número 0;
 19c:	8f e3       	ldi	r24, 0x3F	; 63
 19e:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <display_1_7seg>
 1a2:	2a c0       	rjmp	.+84     	; 0x1f8 <actualiza_display+0x72>
		case 1: display_1_7seg = 0b00000110; break; //Número 1;
 1a4:	86 e0       	ldi	r24, 0x06	; 6
 1a6:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <display_1_7seg>
 1aa:	26 c0       	rjmp	.+76     	; 0x1f8 <actualiza_display+0x72>
		case 2: display_1_7seg = 0b01011011; break; //Número 2;
 1ac:	8b e5       	ldi	r24, 0x5B	; 91
 1ae:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <display_1_7seg>
 1b2:	22 c0       	rjmp	.+68     	; 0x1f8 <actualiza_display+0x72>
		case 3: display_1_7seg = 0b01001111; break; //Número 3;
 1b4:	8f e4       	ldi	r24, 0x4F	; 79
 1b6:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <display_1_7seg>
 1ba:	1e c0       	rjmp	.+60     	; 0x1f8 <actualiza_display+0x72>
		case 4: display_1_7seg = 0b01100110; break; //Número 4;
 1bc:	86 e6       	ldi	r24, 0x66	; 102
 1be:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <display_1_7seg>
 1c2:	1a c0       	rjmp	.+52     	; 0x1f8 <actualiza_display+0x72>
		case 5: display_1_7seg = 0b01101101; break; //Número 5;
 1c4:	8d e6       	ldi	r24, 0x6D	; 109
 1c6:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <display_1_7seg>
 1ca:	16 c0       	rjmp	.+44     	; 0x1f8 <actualiza_display+0x72>
		case 6: display_1_7seg = 0b01111101; break; //Número 6;
 1cc:	8d e7       	ldi	r24, 0x7D	; 125
 1ce:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <display_1_7seg>
 1d2:	12 c0       	rjmp	.+36     	; 0x1f8 <actualiza_display+0x72>
		case 7: display_1_7seg = 0b00000111; break; //Número 7;
 1d4:	87 e0       	ldi	r24, 0x07	; 7
 1d6:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <display_1_7seg>
 1da:	0e c0       	rjmp	.+28     	; 0x1f8 <actualiza_display+0x72>
		case 8: display_1_7seg = 0b01111111; break; //Número 8;
 1dc:	8f e7       	ldi	r24, 0x7F	; 127
 1de:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <display_1_7seg>
 1e2:	0a c0       	rjmp	.+20     	; 0x1f8 <actualiza_display+0x72>
		case 9: display_1_7seg = 0b01101111; break; //Número 9;
 1e4:	8f e6       	ldi	r24, 0x6F	; 111
 1e6:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <display_1_7seg>
 1ea:	06 c0       	rjmp	.+12     	; 0x1f8 <actualiza_display+0x72>
		case 10: display_1_7seg = 0b00000000; break; //Display apagado;
 1ec:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <display_1_7seg>
 1f0:	03 c0       	rjmp	.+6      	; 0x1f8 <actualiza_display+0x72>
		case 11: display_1_7seg = 0b01110011; break; //Letra P;
 1f2:	83 e7       	ldi	r24, 0x73	; 115
 1f4:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <display_1_7seg>
	}
	
	switch (display_0) {
 1f8:	e0 91 2b 02 	lds	r30, 0x022B	; 0x80022b <display_0>
 1fc:	f0 91 2c 02 	lds	r31, 0x022C	; 0x80022c <display_0+0x1>
 200:	ec 30       	cpi	r30, 0x0C	; 12
 202:	f1 05       	cpc	r31, r1
 204:	90 f5       	brcc	.+100    	; 0x26a <actualiza_display+0xe4>
 206:	e2 58       	subi	r30, 0x82	; 130
 208:	ff 4f       	sbci	r31, 0xFF	; 255
 20a:	0c 94 b0 04 	jmp	0x960	; 0x960 <__tablejump2__>
		case 0: display_0_7seg = 0b00111111; break; //Número 0;
 20e:	8f e3       	ldi	r24, 0x3F	; 63
 210:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display_0_7seg>
 214:	08 95       	ret
		case 1: display_0_7seg = 0b00000110; break; //Número 1;
 216:	86 e0       	ldi	r24, 0x06	; 6
 218:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display_0_7seg>
 21c:	08 95       	ret
		case 2: display_0_7seg = 0b01011011; break; //Número 2;
 21e:	8b e5       	ldi	r24, 0x5B	; 91
 220:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display_0_7seg>
 224:	08 95       	ret
		case 3: display_0_7seg = 0b01001111; break; //Número 3;
 226:	8f e4       	ldi	r24, 0x4F	; 79
 228:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display_0_7seg>
 22c:	08 95       	ret
		case 4: display_0_7seg = 0b01100110; break; //Número 4;
 22e:	86 e6       	ldi	r24, 0x66	; 102
 230:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display_0_7seg>
 234:	08 95       	ret
		case 5: display_0_7seg = 0b01101101; break; //Número 5;
 236:	8d e6       	ldi	r24, 0x6D	; 109
 238:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display_0_7seg>
 23c:	08 95       	ret
		case 6: display_0_7seg = 0b01111101; break; //Número 6;
 23e:	8d e7       	ldi	r24, 0x7D	; 125
 240:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display_0_7seg>
 244:	08 95       	ret
		case 7: display_0_7seg = 0b00000111; break; //Número 7;
 246:	87 e0       	ldi	r24, 0x07	; 7
 248:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display_0_7seg>
 24c:	08 95       	ret
		case 8: display_0_7seg = 0b01111111; break; //Número 8;
 24e:	8f e7       	ldi	r24, 0x7F	; 127
 250:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display_0_7seg>
 254:	08 95       	ret
		case 9: display_0_7seg = 0b01101111; break; //Número 9;
 256:	8f e6       	ldi	r24, 0x6F	; 111
 258:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display_0_7seg>
 25c:	08 95       	ret
		case 10: display_0_7seg = 0b00000000; break; //Display apagado;
 25e:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <display_0_7seg>
 262:	08 95       	ret
		case 11: display_0_7seg = 0b01110011; break; //Letra P;
 264:	83 e7       	ldi	r24, 0x73	; 115
 266:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <display_0_7seg>
 26a:	08 95       	ret

0000026c <inicializa_display>:
	}
}

void inicializa_display() {
	display_0 = 0;
 26c:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <display_0+0x1>
 270:	10 92 2b 02 	sts	0x022B, r1	; 0x80022b <display_0>
	display_1 = 11;
 274:	8b e0       	ldi	r24, 0x0B	; 11
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	90 93 2e 02 	sts	0x022E, r25	; 0x80022e <display_1+0x1>
 27c:	80 93 2d 02 	sts	0x022D, r24	; 0x80022d <display_1>
 280:	08 95       	ret

00000282 <setup>:
volatile uint8_t display_0_7seg;


void setup() {
	
	cli();
 282:	f8 94       	cli
	
	//Las siguientes líneas de código son para habilitar las interrupciones de los botones SS (INT5) y UP (INT6).
	EICRB = 1<<ISC50;   //PE5
 284:	ea e6       	ldi	r30, 0x6A	; 106
 286:	f0 e0       	ldi	r31, 0x00	; 0
 288:	94 e0       	ldi	r25, 0x04	; 4
 28a:	90 83       	st	Z, r25
	EICRB |= 1<<ISC60;  //PE6
 28c:	80 81       	ld	r24, Z
 28e:	80 61       	ori	r24, 0x10	; 16
 290:	80 83       	st	Z, r24
	EIMSK = 1<<INT5;
 292:	80 e2       	ldi	r24, 0x20	; 32
 294:	8d bb       	out	0x1d, r24	; 29
	EIMSK |= 1<<INT6;
 296:	8d b3       	in	r24, 0x1d	; 29
 298:	80 64       	ori	r24, 0x40	; 64
 29a:	8d bb       	out	0x1d, r24	; 29
	
	
	
	//Seteamos entradas y salidas
	DDRA = 0xFF;		    //Display
 29c:	8f ef       	ldi	r24, 0xFF	; 255
 29e:	81 b9       	out	0x01, r24	; 1
	DDRB = 1<<SELECCION;    //Señal selección display
 2a0:	94 b9       	out	0x04, r25	; 4
	DDRE = 0x00;
 2a2:	1d b8       	out	0x0d, r1	; 13
	
	//Habilitamos el timer para contar milisegunos y realizar el refresco del display (modo CTC, preescalado 64)
	TCCR2A = 1<<WGM21;
 2a4:	92 e0       	ldi	r25, 0x02	; 2
 2a6:	90 93 b0 00 	sts	0x00B0, r25	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f00b0>
	TCCR2B = 1<<CS20;
 2aa:	e1 eb       	ldi	r30, 0xB1	; 177
 2ac:	f0 e0       	ldi	r31, 0x00	; 0
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	80 83       	st	Z, r24
	TCCR2B |= 1<<CS21;
 2b2:	80 81       	ld	r24, Z
 2b4:	82 60       	ori	r24, 0x02	; 2
 2b6:	80 83       	st	Z, r24
	TIMSK2 = 1<<OCIE2A;
 2b8:	e0 e7       	ldi	r30, 0x70	; 112
 2ba:	f0 e0       	ldi	r31, 0x00	; 0
 2bc:	90 83       	st	Z, r25
	TIMSK2 |= 1<<OCIE2B;
 2be:	80 81       	ld	r24, Z
 2c0:	84 60       	ori	r24, 0x04	; 4
 2c2:	80 83       	st	Z, r24
	OCR2A = 250;  //cada milisegundo
 2c4:	8a ef       	ldi	r24, 0xFA	; 250
 2c6:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7f00b3>
	OCR2B = 64;   //cada 0.25 milisegundos
 2ca:	80 e4       	ldi	r24, 0x40	; 64
 2cc:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f00b4>

	inicializa_display();
 2d0:	0e 94 36 01 	call	0x26c	; 0x26c <inicializa_display>
	actualiza_display();
 2d4:	0e 94 c3 00 	call	0x186	; 0x186 <actualiza_display>
	
	sei();
 2d8:	78 94       	sei
 2da:	08 95       	ret

000002dc <main>:



int main(void) {
	
	setup();
 2dc:	0e 94 41 01 	call	0x282	; 0x282 <setup>
	
	do {
		if (bandera_UP == 1) {
 2e0:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <bandera_UP>
 2e4:	81 30       	cpi	r24, 0x01	; 1
 2e6:	31 f4       	brne	.+12     	; 0x2f4 <main+0x18>
			actualiza_contador();
 2e8:	0e 94 a9 00 	call	0x152	; 0x152 <actualiza_contador>
			actualiza_display();
 2ec:	0e 94 c3 00 	call	0x186	; 0x186 <actualiza_display>
			bandera_UP = 0;
 2f0:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <bandera_UP>
		}
	} while (bandera_SS == 0);
 2f4:	80 91 21 02 	lds	r24, 0x0221	; 0x800221 <bandera_SS>
 2f8:	88 23       	and	r24, r24
 2fa:	91 f3       	breq	.-28     	; 0x2e0 <main+0x4>
	bandera_SS = 0;
 2fc:	10 92 21 02 	sts	0x0221, r1	; 0x800221 <bandera_SS>
	main_principal();
 300:	0e 94 bb 03 	call	0x776	; 0x776 <main_principal>
	
	
}
 304:	80 e0       	ldi	r24, 0x00	; 0
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	08 95       	ret

0000030a <__vector_6>:


ISR(INT5_vect) {
 30a:	1f 92       	push	r1
 30c:	0f 92       	push	r0
 30e:	0f b6       	in	r0, 0x3f	; 63
 310:	0f 92       	push	r0
 312:	11 24       	eor	r1, r1
 314:	af 92       	push	r10
 316:	bf 92       	push	r11
 318:	cf 92       	push	r12
 31a:	df 92       	push	r13
 31c:	ef 92       	push	r14
 31e:	ff 92       	push	r15
 320:	0f 93       	push	r16
 322:	1f 93       	push	r17
 324:	2f 93       	push	r18
 326:	3f 93       	push	r19
 328:	4f 93       	push	r20
 32a:	5f 93       	push	r21
 32c:	6f 93       	push	r22
 32e:	7f 93       	push	r23
 330:	8f 93       	push	r24
 332:	9f 93       	push	r25
 334:	af 93       	push	r26
 336:	ef 93       	push	r30
	static uint8_t bandera_antirrebotes_SS = 0;
	static uint64_t T_SS = 0;
	
	if (bandera_antirrebotes_SS == 1) {
 338:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <bandera_antirrebotes_SS.1662>
 33c:	81 30       	cpi	r24, 0x01	; 1
 33e:	49 f5       	brne	.+82     	; 0x392 <__vector_6+0x88>
		if (millis - T_SS > 5) {   //Cambiar el tiempo a 5 ms para simulación
 340:	20 91 19 02 	lds	r18, 0x0219	; 0x800219 <millis>
 344:	30 91 1a 02 	lds	r19, 0x021A	; 0x80021a <millis+0x1>
 348:	40 91 1b 02 	lds	r20, 0x021B	; 0x80021b <millis+0x2>
 34c:	50 91 1c 02 	lds	r21, 0x021C	; 0x80021c <millis+0x3>
 350:	60 91 1d 02 	lds	r22, 0x021D	; 0x80021d <millis+0x4>
 354:	70 91 1e 02 	lds	r23, 0x021E	; 0x80021e <millis+0x5>
 358:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <millis+0x6>
 35c:	90 91 20 02 	lds	r25, 0x0220	; 0x800220 <millis+0x7>
 360:	a0 90 0e 02 	lds	r10, 0x020E	; 0x80020e <T_SS.1663>
 364:	b0 90 0f 02 	lds	r11, 0x020F	; 0x80020f <T_SS.1663+0x1>
 368:	c0 90 10 02 	lds	r12, 0x0210	; 0x800210 <T_SS.1663+0x2>
 36c:	d0 90 11 02 	lds	r13, 0x0211	; 0x800211 <T_SS.1663+0x3>
 370:	e0 90 12 02 	lds	r14, 0x0212	; 0x800212 <T_SS.1663+0x4>
 374:	f0 90 13 02 	lds	r15, 0x0213	; 0x800213 <T_SS.1663+0x5>
 378:	00 91 14 02 	lds	r16, 0x0214	; 0x800214 <T_SS.1663+0x6>
 37c:	10 91 15 02 	lds	r17, 0x0215	; 0x800215 <T_SS.1663+0x7>
 380:	0e 94 c2 04 	call	0x984	; 0x984 <__subdi3>
 384:	a5 e0       	ldi	r26, 0x05	; 5
 386:	0e 94 cb 04 	call	0x996	; 0x996 <__cmpdi2_s8>
 38a:	19 f0       	breq	.+6      	; 0x392 <__vector_6+0x88>
 38c:	10 f0       	brcs	.+4      	; 0x392 <__vector_6+0x88>
			bandera_antirrebotes_SS = 0;
 38e:	10 92 16 02 	sts	0x0216, r1	; 0x800216 <bandera_antirrebotes_SS.1662>
		}
	}
	if (bandera_antirrebotes_SS == 0) {
 392:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <bandera_antirrebotes_SS.1662>
 396:	81 11       	cpse	r24, r1
 398:	4b c0       	rjmp	.+150    	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
		if (getBit(BOTONES, SS)) {
 39a:	65 9b       	sbis	0x0c, 5	; 12
 39c:	24 c0       	rjmp	.+72     	; 0x3e6 <__vector_6+0xdc>
			T_SS = millis;
 39e:	70 91 19 02 	lds	r23, 0x0219	; 0x800219 <millis>
 3a2:	60 91 1a 02 	lds	r22, 0x021A	; 0x80021a <millis+0x1>
 3a6:	50 91 1b 02 	lds	r21, 0x021B	; 0x80021b <millis+0x2>
 3aa:	40 91 1c 02 	lds	r20, 0x021C	; 0x80021c <millis+0x3>
 3ae:	30 91 1d 02 	lds	r19, 0x021D	; 0x80021d <millis+0x4>
 3b2:	20 91 1e 02 	lds	r18, 0x021E	; 0x80021e <millis+0x5>
 3b6:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <millis+0x6>
 3ba:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <millis+0x7>
 3be:	70 93 0e 02 	sts	0x020E, r23	; 0x80020e <T_SS.1663>
 3c2:	60 93 0f 02 	sts	0x020F, r22	; 0x80020f <T_SS.1663+0x1>
 3c6:	50 93 10 02 	sts	0x0210, r21	; 0x800210 <T_SS.1663+0x2>
 3ca:	40 93 11 02 	sts	0x0211, r20	; 0x800211 <T_SS.1663+0x3>
 3ce:	30 93 12 02 	sts	0x0212, r19	; 0x800212 <T_SS.1663+0x4>
 3d2:	20 93 13 02 	sts	0x0213, r18	; 0x800213 <T_SS.1663+0x5>
 3d6:	90 93 14 02 	sts	0x0214, r25	; 0x800214 <T_SS.1663+0x6>
 3da:	80 93 15 02 	sts	0x0215, r24	; 0x800215 <T_SS.1663+0x7>
			bandera_antirrebotes_SS = 1;
 3de:	81 e0       	ldi	r24, 0x01	; 1
 3e0:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <bandera_antirrebotes_SS.1662>
 3e4:	25 c0       	rjmp	.+74     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
			} else {
			bandera_SS = 1;
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	80 93 21 02 	sts	0x0221, r24	; 0x800221 <bandera_SS>
			T_SS= millis;
 3ec:	e0 91 19 02 	lds	r30, 0x0219	; 0x800219 <millis>
 3f0:	70 91 1a 02 	lds	r23, 0x021A	; 0x80021a <millis+0x1>
 3f4:	60 91 1b 02 	lds	r22, 0x021B	; 0x80021b <millis+0x2>
 3f8:	50 91 1c 02 	lds	r21, 0x021C	; 0x80021c <millis+0x3>
 3fc:	40 91 1d 02 	lds	r20, 0x021D	; 0x80021d <millis+0x4>
 400:	30 91 1e 02 	lds	r19, 0x021E	; 0x80021e <millis+0x5>
 404:	20 91 1f 02 	lds	r18, 0x021F	; 0x80021f <millis+0x6>
 408:	90 91 20 02 	lds	r25, 0x0220	; 0x800220 <millis+0x7>
 40c:	e0 93 0e 02 	sts	0x020E, r30	; 0x80020e <T_SS.1663>
 410:	70 93 0f 02 	sts	0x020F, r23	; 0x80020f <T_SS.1663+0x1>
 414:	60 93 10 02 	sts	0x0210, r22	; 0x800210 <T_SS.1663+0x2>
 418:	50 93 11 02 	sts	0x0211, r21	; 0x800211 <T_SS.1663+0x3>
 41c:	40 93 12 02 	sts	0x0212, r20	; 0x800212 <T_SS.1663+0x4>
 420:	30 93 13 02 	sts	0x0213, r19	; 0x800213 <T_SS.1663+0x5>
 424:	20 93 14 02 	sts	0x0214, r18	; 0x800214 <T_SS.1663+0x6>
 428:	90 93 15 02 	sts	0x0215, r25	; 0x800215 <T_SS.1663+0x7>
			bandera_antirrebotes_SS = 1;
 42c:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <bandera_antirrebotes_SS.1662>
		}
	}
	
}
 430:	ef 91       	pop	r30
 432:	af 91       	pop	r26
 434:	9f 91       	pop	r25
 436:	8f 91       	pop	r24
 438:	7f 91       	pop	r23
 43a:	6f 91       	pop	r22
 43c:	5f 91       	pop	r21
 43e:	4f 91       	pop	r20
 440:	3f 91       	pop	r19
 442:	2f 91       	pop	r18
 444:	1f 91       	pop	r17
 446:	0f 91       	pop	r16
 448:	ff 90       	pop	r15
 44a:	ef 90       	pop	r14
 44c:	df 90       	pop	r13
 44e:	cf 90       	pop	r12
 450:	bf 90       	pop	r11
 452:	af 90       	pop	r10
 454:	0f 90       	pop	r0
 456:	0f be       	out	0x3f, r0	; 63
 458:	0f 90       	pop	r0
 45a:	1f 90       	pop	r1
 45c:	18 95       	reti

0000045e <__vector_7>:

ISR(INT6_vect) {
 45e:	1f 92       	push	r1
 460:	0f 92       	push	r0
 462:	0f b6       	in	r0, 0x3f	; 63
 464:	0f 92       	push	r0
 466:	11 24       	eor	r1, r1
 468:	af 92       	push	r10
 46a:	bf 92       	push	r11
 46c:	cf 92       	push	r12
 46e:	df 92       	push	r13
 470:	ef 92       	push	r14
 472:	ff 92       	push	r15
 474:	0f 93       	push	r16
 476:	1f 93       	push	r17
 478:	2f 93       	push	r18
 47a:	3f 93       	push	r19
 47c:	4f 93       	push	r20
 47e:	5f 93       	push	r21
 480:	6f 93       	push	r22
 482:	7f 93       	push	r23
 484:	8f 93       	push	r24
 486:	9f 93       	push	r25
 488:	af 93       	push	r26
 48a:	ef 93       	push	r30
	static uint8_t bandera_antirrebotes_UP = 0;
	static uint64_t T_UP = 0;
	
	if (bandera_antirrebotes_UP == 1) {
 48c:	80 91 0d 02 	lds	r24, 0x020D	; 0x80020d <bandera_antirrebotes_UP.1669>
 490:	81 30       	cpi	r24, 0x01	; 1
 492:	49 f5       	brne	.+82     	; 0x4e6 <__vector_7+0x88>
 		if (millis - T_UP > 5) {        //Cambiar el tiempo a 5 ms para simulación
 494:	20 91 19 02 	lds	r18, 0x0219	; 0x800219 <millis>
 498:	30 91 1a 02 	lds	r19, 0x021A	; 0x80021a <millis+0x1>
 49c:	40 91 1b 02 	lds	r20, 0x021B	; 0x80021b <millis+0x2>
 4a0:	50 91 1c 02 	lds	r21, 0x021C	; 0x80021c <millis+0x3>
 4a4:	60 91 1d 02 	lds	r22, 0x021D	; 0x80021d <millis+0x4>
 4a8:	70 91 1e 02 	lds	r23, 0x021E	; 0x80021e <millis+0x5>
 4ac:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <millis+0x6>
 4b0:	90 91 20 02 	lds	r25, 0x0220	; 0x800220 <millis+0x7>
 4b4:	a0 90 05 02 	lds	r10, 0x0205	; 0x800205 <T_UP.1670>
 4b8:	b0 90 06 02 	lds	r11, 0x0206	; 0x800206 <T_UP.1670+0x1>
 4bc:	c0 90 07 02 	lds	r12, 0x0207	; 0x800207 <T_UP.1670+0x2>
 4c0:	d0 90 08 02 	lds	r13, 0x0208	; 0x800208 <T_UP.1670+0x3>
 4c4:	e0 90 09 02 	lds	r14, 0x0209	; 0x800209 <T_UP.1670+0x4>
 4c8:	f0 90 0a 02 	lds	r15, 0x020A	; 0x80020a <T_UP.1670+0x5>
 4cc:	00 91 0b 02 	lds	r16, 0x020B	; 0x80020b <T_UP.1670+0x6>
 4d0:	10 91 0c 02 	lds	r17, 0x020C	; 0x80020c <T_UP.1670+0x7>
 4d4:	0e 94 c2 04 	call	0x984	; 0x984 <__subdi3>
 4d8:	a5 e0       	ldi	r26, 0x05	; 5
 4da:	0e 94 cb 04 	call	0x996	; 0x996 <__cmpdi2_s8>
 4de:	19 f0       	breq	.+6      	; 0x4e6 <__vector_7+0x88>
 4e0:	10 f0       	brcs	.+4      	; 0x4e6 <__vector_7+0x88>
			bandera_antirrebotes_UP = 0;
 4e2:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <bandera_antirrebotes_UP.1669>
		}
	}
	if (bandera_antirrebotes_UP == 0) {
 4e6:	80 91 0d 02 	lds	r24, 0x020D	; 0x80020d <bandera_antirrebotes_UP.1669>
 4ea:	81 11       	cpse	r24, r1
 4ec:	4b c0       	rjmp	.+150    	; 0x584 <__vector_7+0x126>
		if (getBit(BOTONES, UP)) {
 4ee:	66 9b       	sbis	0x0c, 6	; 12
 4f0:	24 c0       	rjmp	.+72     	; 0x53a <__vector_7+0xdc>
			T_UP = millis;
 4f2:	70 91 19 02 	lds	r23, 0x0219	; 0x800219 <millis>
 4f6:	60 91 1a 02 	lds	r22, 0x021A	; 0x80021a <millis+0x1>
 4fa:	50 91 1b 02 	lds	r21, 0x021B	; 0x80021b <millis+0x2>
 4fe:	40 91 1c 02 	lds	r20, 0x021C	; 0x80021c <millis+0x3>
 502:	30 91 1d 02 	lds	r19, 0x021D	; 0x80021d <millis+0x4>
 506:	20 91 1e 02 	lds	r18, 0x021E	; 0x80021e <millis+0x5>
 50a:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <millis+0x6>
 50e:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <millis+0x7>
 512:	70 93 05 02 	sts	0x0205, r23	; 0x800205 <T_UP.1670>
 516:	60 93 06 02 	sts	0x0206, r22	; 0x800206 <T_UP.1670+0x1>
 51a:	50 93 07 02 	sts	0x0207, r21	; 0x800207 <T_UP.1670+0x2>
 51e:	40 93 08 02 	sts	0x0208, r20	; 0x800208 <T_UP.1670+0x3>
 522:	30 93 09 02 	sts	0x0209, r19	; 0x800209 <T_UP.1670+0x4>
 526:	20 93 0a 02 	sts	0x020A, r18	; 0x80020a <T_UP.1670+0x5>
 52a:	90 93 0b 02 	sts	0x020B, r25	; 0x80020b <T_UP.1670+0x6>
 52e:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <T_UP.1670+0x7>
			bandera_antirrebotes_UP = 1;
 532:	81 e0       	ldi	r24, 0x01	; 1
 534:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <bandera_antirrebotes_UP.1669>
 538:	25 c0       	rjmp	.+74     	; 0x584 <__vector_7+0x126>
			} else {
			bandera_UP = 1;
 53a:	81 e0       	ldi	r24, 0x01	; 1
 53c:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <bandera_UP>
			T_UP = millis;
 540:	e0 91 19 02 	lds	r30, 0x0219	; 0x800219 <millis>
 544:	70 91 1a 02 	lds	r23, 0x021A	; 0x80021a <millis+0x1>
 548:	60 91 1b 02 	lds	r22, 0x021B	; 0x80021b <millis+0x2>
 54c:	50 91 1c 02 	lds	r21, 0x021C	; 0x80021c <millis+0x3>
 550:	40 91 1d 02 	lds	r20, 0x021D	; 0x80021d <millis+0x4>
 554:	30 91 1e 02 	lds	r19, 0x021E	; 0x80021e <millis+0x5>
 558:	20 91 1f 02 	lds	r18, 0x021F	; 0x80021f <millis+0x6>
 55c:	90 91 20 02 	lds	r25, 0x0220	; 0x800220 <millis+0x7>
 560:	e0 93 05 02 	sts	0x0205, r30	; 0x800205 <T_UP.1670>
 564:	70 93 06 02 	sts	0x0206, r23	; 0x800206 <T_UP.1670+0x1>
 568:	60 93 07 02 	sts	0x0207, r22	; 0x800207 <T_UP.1670+0x2>
 56c:	50 93 08 02 	sts	0x0208, r21	; 0x800208 <T_UP.1670+0x3>
 570:	40 93 09 02 	sts	0x0209, r20	; 0x800209 <T_UP.1670+0x4>
 574:	30 93 0a 02 	sts	0x020A, r19	; 0x80020a <T_UP.1670+0x5>
 578:	20 93 0b 02 	sts	0x020B, r18	; 0x80020b <T_UP.1670+0x6>
 57c:	90 93 0c 02 	sts	0x020C, r25	; 0x80020c <T_UP.1670+0x7>
			bandera_antirrebotes_UP = 1;
 580:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <bandera_antirrebotes_UP.1669>
		}
	}
	
}
 584:	ef 91       	pop	r30
 586:	af 91       	pop	r26
 588:	9f 91       	pop	r25
 58a:	8f 91       	pop	r24
 58c:	7f 91       	pop	r23
 58e:	6f 91       	pop	r22
 590:	5f 91       	pop	r21
 592:	4f 91       	pop	r20
 594:	3f 91       	pop	r19
 596:	2f 91       	pop	r18
 598:	1f 91       	pop	r17
 59a:	0f 91       	pop	r16
 59c:	ff 90       	pop	r15
 59e:	ef 90       	pop	r14
 5a0:	df 90       	pop	r13
 5a2:	cf 90       	pop	r12
 5a4:	bf 90       	pop	r11
 5a6:	af 90       	pop	r10
 5a8:	0f 90       	pop	r0
 5aa:	0f be       	out	0x3f, r0	; 63
 5ac:	0f 90       	pop	r0
 5ae:	1f 90       	pop	r1
 5b0:	18 95       	reti

000005b2 <__vector_13>:

ISR(TIMER2_COMPA_vect) {
 5b2:	1f 92       	push	r1
 5b4:	0f 92       	push	r0
 5b6:	0f b6       	in	r0, 0x3f	; 63
 5b8:	0f 92       	push	r0
 5ba:	11 24       	eor	r1, r1
 5bc:	2f 93       	push	r18
 5be:	3f 93       	push	r19
 5c0:	4f 93       	push	r20
 5c2:	5f 93       	push	r21
 5c4:	6f 93       	push	r22
 5c6:	7f 93       	push	r23
 5c8:	8f 93       	push	r24
 5ca:	9f 93       	push	r25
 5cc:	af 93       	push	r26
	millis++;
 5ce:	20 91 19 02 	lds	r18, 0x0219	; 0x800219 <millis>
 5d2:	30 91 1a 02 	lds	r19, 0x021A	; 0x80021a <millis+0x1>
 5d6:	40 91 1b 02 	lds	r20, 0x021B	; 0x80021b <millis+0x2>
 5da:	50 91 1c 02 	lds	r21, 0x021C	; 0x80021c <millis+0x3>
 5de:	60 91 1d 02 	lds	r22, 0x021D	; 0x80021d <millis+0x4>
 5e2:	70 91 1e 02 	lds	r23, 0x021E	; 0x80021e <millis+0x5>
 5e6:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <millis+0x6>
 5ea:	90 91 20 02 	lds	r25, 0x0220	; 0x800220 <millis+0x7>
 5ee:	a1 e0       	ldi	r26, 0x01	; 1
 5f0:	0e 94 b6 04 	call	0x96c	; 0x96c <__adddi3_s8>
 5f4:	20 93 19 02 	sts	0x0219, r18	; 0x800219 <millis>
 5f8:	30 93 1a 02 	sts	0x021A, r19	; 0x80021a <millis+0x1>
 5fc:	40 93 1b 02 	sts	0x021B, r20	; 0x80021b <millis+0x2>
 600:	50 93 1c 02 	sts	0x021C, r21	; 0x80021c <millis+0x3>
 604:	60 93 1d 02 	sts	0x021D, r22	; 0x80021d <millis+0x4>
 608:	70 93 1e 02 	sts	0x021E, r23	; 0x80021e <millis+0x5>
 60c:	80 93 1f 02 	sts	0x021F, r24	; 0x80021f <millis+0x6>
 610:	90 93 20 02 	sts	0x0220, r25	; 0x800220 <millis+0x7>
}
 614:	af 91       	pop	r26
 616:	9f 91       	pop	r25
 618:	8f 91       	pop	r24
 61a:	7f 91       	pop	r23
 61c:	6f 91       	pop	r22
 61e:	5f 91       	pop	r21
 620:	4f 91       	pop	r20
 622:	3f 91       	pop	r19
 624:	2f 91       	pop	r18
 626:	0f 90       	pop	r0
 628:	0f be       	out	0x3f, r0	; 63
 62a:	0f 90       	pop	r0
 62c:	1f 90       	pop	r1
 62e:	18 95       	reti

00000630 <__vector_14>:

ISR(TIMER2_COMPB_vect) {
 630:	1f 92       	push	r1
 632:	0f 92       	push	r0
 634:	0f b6       	in	r0, 0x3f	; 63
 636:	0f 92       	push	r0
 638:	11 24       	eor	r1, r1
 63a:	8f 93       	push	r24
 63c:	9f 93       	push	r25
 63e:	ef 93       	push	r30
 640:	ff 93       	push	r31
	static uint8_t sel = 0;
	static int aux = 0;
	aux++;
 642:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <aux.1682>
 646:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <aux.1682+0x1>
 64a:	01 96       	adiw	r24, 0x01	; 1
 64c:	90 93 04 02 	sts	0x0204, r25	; 0x800204 <aux.1682+0x1>
 650:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <aux.1682>
	OCR2B += 64;
 654:	e4 eb       	ldi	r30, 0xB4	; 180
 656:	f0 e0       	ldi	r31, 0x00	; 0
 658:	80 81       	ld	r24, Z
 65a:	80 5c       	subi	r24, 0xC0	; 192
 65c:	80 83       	st	Z, r24
	sel = ~sel;
 65e:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__data_end>
 662:	80 95       	com	r24
 664:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <__data_end>
	if (sel == 1) {
 668:	81 30       	cpi	r24, 0x01	; 1
 66a:	39 f4       	brne	.+14     	; 0x67a <__vector_14+0x4a>
		setBit(PORTB, SELECCION);
 66c:	85 b1       	in	r24, 0x05	; 5
 66e:	84 60       	ori	r24, 0x04	; 4
 670:	85 b9       	out	0x05, r24	; 5
		SEGMENTOS = display_1_7seg;
 672:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <display_1_7seg>
 676:	82 b9       	out	0x02, r24	; 2
 678:	06 c0       	rjmp	.+12     	; 0x686 <__vector_14+0x56>
		} else {
		clrBit(PORTB, SELECCION);
 67a:	85 b1       	in	r24, 0x05	; 5
 67c:	8b 7f       	andi	r24, 0xFB	; 251
 67e:	85 b9       	out	0x05, r24	; 5
		SEGMENTOS = display_0_7seg;
 680:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <display_0_7seg>
 684:	82 b9       	out	0x02, r24	; 2
	}
}
 686:	ff 91       	pop	r31
 688:	ef 91       	pop	r30
 68a:	9f 91       	pop	r25
 68c:	8f 91       	pop	r24
 68e:	0f 90       	pop	r0
 690:	0f be       	out	0x3f, r0	; 63
 692:	0f 90       	pop	r0
 694:	1f 90       	pop	r1
 696:	18 95       	reti

00000698 <setup_principal>:
}

uint16_t getWeight() {
	return (Ton*32/100);
	//Es entre 32 por el preescalado, que es de 256.
}
 698:	f8 94       	cli
 69a:	92 e0       	ldi	r25, 0x02	; 2
 69c:	95 bd       	out	0x25, r25	; 37
 69e:	81 e0       	ldi	r24, 0x01	; 1
 6a0:	84 bd       	out	0x24, r24	; 36
 6a2:	84 b5       	in	r24, 0x24	; 36
 6a4:	82 60       	ori	r24, 0x02	; 2
 6a6:	84 bd       	out	0x24, r24	; 36
 6a8:	85 b5       	in	r24, 0x25	; 37
 6aa:	88 60       	ori	r24, 0x08	; 8
 6ac:	85 bd       	out	0x25, r24	; 37
 6ae:	84 b5       	in	r24, 0x24	; 36
 6b0:	80 62       	ori	r24, 0x20	; 32
 6b2:	84 bd       	out	0x24, r24	; 36
 6b4:	83 b3       	in	r24, 0x13	; 19
 6b6:	80 62       	ori	r24, 0x20	; 32
 6b8:	83 bb       	out	0x13, r24	; 19
 6ba:	88 e2       	ldi	r24, 0x28	; 40
 6bc:	88 bd       	out	0x28, r24	; 40
 6be:	84 e6       	ldi	r24, 0x64	; 100
 6c0:	87 bd       	out	0x27, r24	; 39
 6c2:	e1 e8       	ldi	r30, 0x81	; 129
 6c4:	f0 e0       	ldi	r31, 0x00	; 0
 6c6:	84 e0       	ldi	r24, 0x04	; 4
 6c8:	80 83       	st	Z, r24
 6ca:	80 81       	ld	r24, Z
 6cc:	80 64       	ori	r24, 0x40	; 64
 6ce:	80 83       	st	Z, r24
 6d0:	ef e6       	ldi	r30, 0x6F	; 111
 6d2:	f0 e0       	ldi	r31, 0x00	; 0
 6d4:	90 83       	st	Z, r25
 6d6:	80 81       	ld	r24, Z
 6d8:	84 60       	ori	r24, 0x04	; 4
 6da:	80 83       	st	Z, r24
 6dc:	80 81       	ld	r24, Z
 6de:	88 60       	ori	r24, 0x08	; 8
 6e0:	80 83       	st	Z, r24
 6e2:	80 81       	ld	r24, Z
 6e4:	80 62       	ori	r24, 0x20	; 32
 6e6:	80 83       	st	Z, r24
 6e8:	80 e2       	ldi	r24, 0x20	; 32
 6ea:	86 bb       	out	0x16, r24	; 22
 6ec:	8f e1       	ldi	r24, 0x1F	; 31
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f0089>
 6f4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f0088>
 6f8:	8c e9       	ldi	r24, 0x9C	; 156
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f008b>
 700:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f008a>
 704:	88 e3       	ldi	r24, 0x38	; 56
 706:	91 e0       	ldi	r25, 0x01	; 1
 708:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <__TEXT_REGION_LENGTH__+0x7f008d>
 70c:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x7f008c>
 710:	a0 e9       	ldi	r26, 0x90	; 144
 712:	b0 e0       	ldi	r27, 0x00	; 0
 714:	8c 91       	ld	r24, X
 716:	81 60       	ori	r24, 0x01	; 1
 718:	8c 93       	st	X, r24
 71a:	8c 91       	ld	r24, X
 71c:	82 60       	ori	r24, 0x02	; 2
 71e:	8c 93       	st	X, r24
 720:	e1 e9       	ldi	r30, 0x91	; 145
 722:	f0 e0       	ldi	r31, 0x00	; 0
 724:	80 81       	ld	r24, Z
 726:	88 60       	ori	r24, 0x08	; 8
 728:	80 83       	st	Z, r24
 72a:	80 81       	ld	r24, Z
 72c:	80 61       	ori	r24, 0x10	; 16
 72e:	80 83       	st	Z, r24
 730:	80 81       	ld	r24, Z
 732:	82 60       	ori	r24, 0x02	; 2
 734:	80 83       	st	Z, r24
 736:	8c 91       	ld	r24, X
 738:	80 62       	ori	r24, 0x20	; 32
 73a:	8c 93       	st	X, r24
 73c:	8d b1       	in	r24, 0x0d	; 13
 73e:	80 61       	ori	r24, 0x10	; 16
 740:	8d b9       	out	0x0d, r24	; 13
 742:	10 92 9b 00 	sts	0x009B, r1	; 0x80009b <__TEXT_REGION_LENGTH__+0x7f009b>
 746:	10 92 9a 00 	sts	0x009A, r1	; 0x80009a <__TEXT_REGION_LENGTH__+0x7f009a>
 74a:	88 ec       	ldi	r24, 0xC8	; 200
 74c:	90 e0       	ldi	r25, 0x00	; 0
 74e:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7f0099>
 752:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7f0098>
 756:	80 81       	ld	r24, Z
 758:	80 64       	ori	r24, 0x40	; 64
 75a:	80 83       	st	Z, r24
 75c:	e1 e7       	ldi	r30, 0x71	; 113
 75e:	f0 e0       	ldi	r31, 0x00	; 0
 760:	80 81       	ld	r24, Z
 762:	80 62       	ori	r24, 0x20	; 32
 764:	80 83       	st	Z, r24
 766:	88 b3       	in	r24, 0x18	; 24
 768:	81 60       	ori	r24, 0x01	; 1
 76a:	88 bb       	out	0x18, r24	; 24
 76c:	80 81       	ld	r24, Z
 76e:	81 60       	ori	r24, 0x01	; 1
 770:	80 83       	st	Z, r24
 772:	78 94       	sei
 774:	08 95       	ret

00000776 <main_principal>:
 776:	0e 94 4c 03 	call	0x698	; 0x698 <setup_principal>
 77a:	08 95       	ret

0000077c <__vector_17>:
 77c:	1f 92       	push	r1
 77e:	0f 92       	push	r0
 780:	0f b6       	in	r0, 0x3f	; 63
 782:	0f 92       	push	r0
 784:	11 24       	eor	r1, r1
 786:	8f 93       	push	r24
 788:	9f 93       	push	r25
 78a:	ef 93       	push	r30
 78c:	ff 93       	push	r31
 78e:	80 91 27 02 	lds	r24, 0x0227	; 0x800227 <deci>
 792:	90 91 28 02 	lds	r25, 0x0228	; 0x800228 <deci+0x1>
 796:	01 96       	adiw	r24, 0x01	; 1
 798:	90 93 28 02 	sts	0x0228, r25	; 0x800228 <deci+0x1>
 79c:	80 93 27 02 	sts	0x0227, r24	; 0x800227 <deci>
 7a0:	81 e0       	ldi	r24, 0x01	; 1
 7a2:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <flag_H>
 7a6:	e8 e8       	ldi	r30, 0x88	; 136
 7a8:	f0 e0       	ldi	r31, 0x00	; 0
 7aa:	80 81       	ld	r24, Z
 7ac:	91 81       	ldd	r25, Z+1	; 0x01
 7ae:	4f 96       	adiw	r24, 0x1f	; 31
 7b0:	91 83       	std	Z+1, r25	; 0x01
 7b2:	80 83       	st	Z, r24
 7b4:	ff 91       	pop	r31
 7b6:	ef 91       	pop	r30
 7b8:	9f 91       	pop	r25
 7ba:	8f 91       	pop	r24
 7bc:	0f 90       	pop	r0
 7be:	0f be       	out	0x3f, r0	; 63
 7c0:	0f 90       	pop	r0
 7c2:	1f 90       	pop	r1
 7c4:	18 95       	reti

000007c6 <__vector_18>:
 7c6:	1f 92       	push	r1
 7c8:	0f 92       	push	r0
 7ca:	0f b6       	in	r0, 0x3f	; 63
 7cc:	0f 92       	push	r0
 7ce:	11 24       	eor	r1, r1
 7d0:	8f 93       	push	r24
 7d2:	9f 93       	push	r25
 7d4:	ef 93       	push	r30
 7d6:	ff 93       	push	r31
 7d8:	81 e0       	ldi	r24, 0x01	; 1
 7da:	80 93 33 02 	sts	0x0233, r24	; 0x800233 <flag_gA>
 7de:	ea e8       	ldi	r30, 0x8A	; 138
 7e0:	f0 e0       	ldi	r31, 0x00	; 0
 7e2:	80 81       	ld	r24, Z
 7e4:	91 81       	ldd	r25, Z+1	; 0x01
 7e6:	84 56       	subi	r24, 0x64	; 100
 7e8:	9f 4f       	sbci	r25, 0xFF	; 255
 7ea:	91 83       	std	Z+1, r25	; 0x01
 7ec:	80 83       	st	Z, r24
 7ee:	ff 91       	pop	r31
 7f0:	ef 91       	pop	r30
 7f2:	9f 91       	pop	r25
 7f4:	8f 91       	pop	r24
 7f6:	0f 90       	pop	r0
 7f8:	0f be       	out	0x3f, r0	; 63
 7fa:	0f 90       	pop	r0
 7fc:	1f 90       	pop	r1
 7fe:	18 95       	reti

00000800 <__vector_19>:
 800:	1f 92       	push	r1
 802:	0f 92       	push	r0
 804:	0f b6       	in	r0, 0x3f	; 63
 806:	0f 92       	push	r0
 808:	11 24       	eor	r1, r1
 80a:	8f 93       	push	r24
 80c:	9f 93       	push	r25
 80e:	ef 93       	push	r30
 810:	ff 93       	push	r31
 812:	80 91 25 02 	lds	r24, 0x0225	; 0x800225 <secs>
 816:	90 91 26 02 	lds	r25, 0x0226	; 0x800226 <secs+0x1>
 81a:	01 96       	adiw	r24, 0x01	; 1
 81c:	90 93 26 02 	sts	0x0226, r25	; 0x800226 <secs+0x1>
 820:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <secs>
 824:	ec e8       	ldi	r30, 0x8C	; 140
 826:	f0 e0       	ldi	r31, 0x00	; 0
 828:	80 81       	ld	r24, Z
 82a:	91 81       	ldd	r25, Z+1	; 0x01
 82c:	88 5c       	subi	r24, 0xC8	; 200
 82e:	9e 4f       	sbci	r25, 0xFE	; 254
 830:	91 83       	std	Z+1, r25	; 0x01
 832:	80 83       	st	Z, r24
 834:	ff 91       	pop	r31
 836:	ef 91       	pop	r30
 838:	9f 91       	pop	r25
 83a:	8f 91       	pop	r24
 83c:	0f 90       	pop	r0
 83e:	0f be       	out	0x3f, r0	; 63
 840:	0f 90       	pop	r0
 842:	1f 90       	pop	r1
 844:	18 95       	reti

00000846 <__vector_16>:
 846:	1f 92       	push	r1
 848:	0f 92       	push	r0
 84a:	0f b6       	in	r0, 0x3f	; 63
 84c:	0f 92       	push	r0
 84e:	11 24       	eor	r1, r1
 850:	8f 93       	push	r24
 852:	9f 93       	push	r25
 854:	ef 93       	push	r30
 856:	ff 93       	push	r31
 858:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f0081>
 85c:	86 ff       	sbrs	r24, 6
 85e:	0a c0       	rjmp	.+20     	; 0x874 <__vector_16+0x2e>
 860:	e1 e8       	ldi	r30, 0x81	; 129
 862:	f0 e0       	ldi	r31, 0x00	; 0
 864:	80 81       	ld	r24, Z
 866:	8f 7b       	andi	r24, 0xBF	; 191
 868:	80 83       	st	Z, r24
 86a:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f0086>
 86e:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f0087>
 872:	0d c0       	rjmp	.+26     	; 0x88e <__vector_16+0x48>
 874:	e1 e8       	ldi	r30, 0x81	; 129
 876:	f0 e0       	ldi	r31, 0x00	; 0
 878:	80 81       	ld	r24, Z
 87a:	80 64       	ori	r24, 0x40	; 64
 87c:	80 83       	st	Z, r24
 87e:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f0086>
 882:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f0087>
 886:	90 93 32 02 	sts	0x0232, r25	; 0x800232 <Ton+0x1>
 88a:	80 93 31 02 	sts	0x0231, r24	; 0x800231 <Ton>
 88e:	ff 91       	pop	r31
 890:	ef 91       	pop	r30
 892:	9f 91       	pop	r25
 894:	8f 91       	pop	r24
 896:	0f 90       	pop	r0
 898:	0f be       	out	0x3f, r0	; 63
 89a:	0f 90       	pop	r0
 89c:	1f 90       	pop	r1
 89e:	18 95       	reti

000008a0 <__vector_31>:
//---------------------------------------------------------------------------------------------------------------

//--IC Timer 3-------------------------------------------------------------------------------------------------------
ISR(TIMER3_CAPT_vect){
 8a0:	1f 92       	push	r1
 8a2:	0f 92       	push	r0
 8a4:	0f b6       	in	r0, 0x3f	; 63
 8a6:	0f 92       	push	r0
 8a8:	11 24       	eor	r1, r1
 8aa:	2f 93       	push	r18
 8ac:	3f 93       	push	r19
 8ae:	8f 93       	push	r24
 8b0:	9f 93       	push	r25
 8b2:	ef 93       	push	r30
 8b4:	ff 93       	push	r31
	static uint16_t Trise = 0;
	if (getBit(TCCR3B, ICES3)){
 8b6:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <__TEXT_REGION_LENGTH__+0x7f0091>
 8ba:	86 ff       	sbrs	r24, 6
 8bc:	2a c0       	rjmp	.+84     	; 0x912 <__vector_31+0x72>
		clrBit(TCCR3B, ICES3);
 8be:	e1 e9       	ldi	r30, 0x91	; 145
 8c0:	f0 e0       	ldi	r31, 0x00	; 0
 8c2:	80 81       	ld	r24, Z
 8c4:	8f 7b       	andi	r24, 0xBF	; 191
 8c6:	80 83       	st	Z, r24
		Ttemp = TCNT3 - Trise + 0x10000 * (ovfl - ovfl_rise);
 8c8:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <ovfl>
 8cc:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <ovfl+0x1>
 8d0:	80 91 29 02 	lds	r24, 0x0229	; 0x800229 <ovfl_rise>
 8d4:	90 91 2a 02 	lds	r25, 0x022A	; 0x80022a <ovfl_rise+0x1>
 8d8:	e4 e9       	ldi	r30, 0x94	; 148
 8da:	f0 e0       	ldi	r31, 0x00	; 0
 8dc:	80 81       	ld	r24, Z
 8de:	91 81       	ldd	r25, Z+1	; 0x01
 8e0:	20 91 23 02 	lds	r18, 0x0223	; 0x800223 <Trise.1657>
 8e4:	30 91 24 02 	lds	r19, 0x0224	; 0x800224 <Trise.1657+0x1>
 8e8:	82 1b       	sub	r24, r18
 8ea:	93 0b       	sbc	r25, r19
 8ec:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 8f0:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
		ovfl_rise = ovfl;
 8f4:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <ovfl>
 8f8:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <ovfl+0x1>
 8fc:	90 93 2a 02 	sts	0x022A, r25	; 0x80022a <ovfl_rise+0x1>
 900:	80 93 29 02 	sts	0x0229, r24	; 0x800229 <ovfl_rise>
		Trise = TCNT3;
 904:	80 81       	ld	r24, Z
 906:	91 81       	ldd	r25, Z+1	; 0x01
 908:	90 93 24 02 	sts	0x0224, r25	; 0x800224 <Trise.1657+0x1>
 90c:	80 93 23 02 	sts	0x0223, r24	; 0x800223 <Trise.1657>
 910:	05 c0       	rjmp	.+10     	; 0x91c <__vector_31+0x7c>
		} else {
		setBit(TCCR3B, ICES3);
 912:	e1 e9       	ldi	r30, 0x91	; 145
 914:	f0 e0       	ldi	r31, 0x00	; 0
 916:	80 81       	ld	r24, Z
 918:	80 64       	ori	r24, 0x40	; 64
 91a:	80 83       	st	Z, r24
	}
	
	
}
 91c:	ff 91       	pop	r31
 91e:	ef 91       	pop	r30
 920:	9f 91       	pop	r25
 922:	8f 91       	pop	r24
 924:	3f 91       	pop	r19
 926:	2f 91       	pop	r18
 928:	0f 90       	pop	r0
 92a:	0f be       	out	0x3f, r0	; 63
 92c:	0f 90       	pop	r0
 92e:	1f 90       	pop	r1
 930:	18 95       	reti

00000932 <__vector_35>:

ISR(TIMER3_OVF_vect){
 932:	1f 92       	push	r1
 934:	0f 92       	push	r0
 936:	0f b6       	in	r0, 0x3f	; 63
 938:	0f 92       	push	r0
 93a:	11 24       	eor	r1, r1
 93c:	8f 93       	push	r24
 93e:	9f 93       	push	r25
	ovfl++;
 940:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <ovfl>
 944:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <ovfl+0x1>
 948:	01 96       	adiw	r24, 0x01	; 1
 94a:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <ovfl+0x1>
 94e:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <ovfl>
}
 952:	9f 91       	pop	r25
 954:	8f 91       	pop	r24
 956:	0f 90       	pop	r0
 958:	0f be       	out	0x3f, r0	; 63
 95a:	0f 90       	pop	r0
 95c:	1f 90       	pop	r1
 95e:	18 95       	reti

00000960 <__tablejump2__>:
 960:	ee 0f       	add	r30, r30
 962:	ff 1f       	adc	r31, r31
 964:	05 90       	lpm	r0, Z+
 966:	f4 91       	lpm	r31, Z
 968:	e0 2d       	mov	r30, r0
 96a:	09 94       	ijmp

0000096c <__adddi3_s8>:
 96c:	00 24       	eor	r0, r0
 96e:	a7 fd       	sbrc	r26, 7
 970:	00 94       	com	r0
 972:	2a 0f       	add	r18, r26
 974:	30 1d       	adc	r19, r0
 976:	40 1d       	adc	r20, r0
 978:	50 1d       	adc	r21, r0
 97a:	60 1d       	adc	r22, r0
 97c:	70 1d       	adc	r23, r0
 97e:	80 1d       	adc	r24, r0
 980:	90 1d       	adc	r25, r0
 982:	08 95       	ret

00000984 <__subdi3>:
 984:	2a 19       	sub	r18, r10
 986:	3b 09       	sbc	r19, r11
 988:	4c 09       	sbc	r20, r12
 98a:	5d 09       	sbc	r21, r13
 98c:	6e 09       	sbc	r22, r14
 98e:	7f 09       	sbc	r23, r15
 990:	80 0b       	sbc	r24, r16
 992:	91 0b       	sbc	r25, r17
 994:	08 95       	ret

00000996 <__cmpdi2_s8>:
 996:	00 24       	eor	r0, r0
 998:	a7 fd       	sbrc	r26, 7
 99a:	00 94       	com	r0
 99c:	2a 17       	cp	r18, r26
 99e:	30 05       	cpc	r19, r0
 9a0:	40 05       	cpc	r20, r0
 9a2:	50 05       	cpc	r21, r0
 9a4:	60 05       	cpc	r22, r0
 9a6:	70 05       	cpc	r23, r0
 9a8:	80 05       	cpc	r24, r0
 9aa:	90 05       	cpc	r25, r0
 9ac:	08 95       	ret

000009ae <_exit>:
 9ae:	f8 94       	cli

000009b0 <__stop_program>:
 9b0:	ff cf       	rjmp	.-2      	; 0x9b0 <__stop_program>
